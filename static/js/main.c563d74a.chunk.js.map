{"version":3,"sources":["components/ContactForm/contactForm.module.css","components/ContactList/contactList.module.css","components/Filter/filter.module.css","redux/actions.js","redux/reducer.js","redux/store.js","redux/operations.js","components/ContactForm/ContactForm.js","redux/selectors.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Phonebook/Phonebook.js","App.js","index.js"],"names":["module","exports","fatchContactRequest","createAction","fatchContactSuccess","fatchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","chengeFilter","items","createReducer","_","payload","state","action","filter","id","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","contactsReducer","devTools","process","axios","defaults","baseURL","data","dispatch","post","then","catch","error","delete","get","ContactForm","name","number","handleChenge","e","currentTarget","value","setState","handleInputChange","preventDefault","props","onSubmit","reset","className","styles","this","inputForm","type","onChange","pattern","required","React","Component","connect","operations","getFilter","gatFilteredList","createSelector","normalizedFilter","toLowerCase","item","includes","onDeteteContact","map","contactListItem","deleteButton","onClick","inputFilter","Phonebook","render","onFatchContact","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c563d74a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"contactForm_ContactForm__2uWQq\",\"inputForm\":\"contactForm_inputForm__NKl6r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"contactList_contactListItem__3uicN\",\"deleteButton\":\"contactList_deleteButton__JIDaK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFilter\":\"filter_inputFilter__1qoiO\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fatchContactRequest = createAction('phonebook/fatchContactRequest');\r\nexport const fatchContactSuccess = createAction('phonebook/fatchContactSuccess');\r\nexport const fatchContactError = createAction('phonebook/fatchContactError');\r\n\r\nexport const addContactRequest = createAction('phonebook/addContactRequest');\r\nexport const addContactSuccess = createAction('phonebook/addContactSuccess');\r\nexport const addContactError = createAction('phonebook/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('phonebook/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('phonebook/deleteContactSuccess');\r\nexport const deleteContactError = createAction('phonebook/deleteContactError');\r\n\r\nexport const chengeFilter = createAction('phonebook/filter');\r\n\r\n\r\n\r\n","import { combineReducers } from 'redux';\r\nimport {createReducer} from '@reduxjs/toolkit'\r\nimport {\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fatchContactRequest,\r\n    fatchContactSuccess,\r\n    fatchContactError,\r\n    chengeFilter\r\n \r\n\r\n} from './actions'\r\n\r\n\r\n// const addContacts = (state, action) => {\r\n//     const normalizedData = action.payload.name.toLowerCase();\r\n    \r\n//         const iterateName = state.find(contact =>\r\n//             contact.name.toLowerCase().includes(normalizedData),\r\n//         );\r\n//         if (iterateName === undefined) {\r\n//             return [...state, action.payload];\r\n//         } else {\r\n//             alert(`${iterateName.name} is already in contacts`);\r\n//             return state;\r\n//         }\r\n// };\r\n      \r\nconst items = createReducer([], {\r\n    [fatchContactSuccess]: (_, {payload}) => payload,\r\n    [addContactSuccess]:(state, {payload}) => [...state, payload ],\r\n    [deleteContactSuccess]:(state, action) => state.filter(({id}) => id !== action.payload)\r\n})\r\nconst filter = createReducer('', {\r\n    [chengeFilter]: (_, action) => action.payload,\r\n})\r\nconst loading = createReducer(false, {\r\n    [fatchContactRequest]:() => true,\r\n    [fatchContactSuccess]: () => false,\r\n    [fatchContactError]:() => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n\r\n\r\n})\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n})\r\n\r\n","\r\nimport {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit'\r\nimport contactsReducer from './reducer'\r\nimport logger from 'redux-logger'\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }), logger];\r\n\r\n \r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactsReducer\r\n    },\r\n    devTools: process.env.NODE_ENV !== 'production',\r\n    middleware,\r\n})\r\nexport default store;","import axios from 'axios'; \r\nimport {addContactRequest,\r\n    addContactSuccess,\r\n    addContactError, deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fatchContactRequest,\r\n    fatchContactSuccess,\r\n    fatchContactError\r\n} from './actions';\r\n\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000'\r\n\r\nconst fatchContact = () => dispatch => {\r\n    dispatch(fatchContactRequest());\r\n\r\n    axios\r\n        .get('/contacts')\r\n        .then(({ data }) => dispatch(fatchContactSuccess(data)))\r\n        .catch(error => dispatch(fatchContactError(error)))\r\n};\r\n\r\n\r\nconst addContact = data => dispatch => {\r\n    dispatch(addContactRequest());\r\n    \r\n\r\n    axios\r\n        .post('/contacts', data)\r\n        .then(({ data }) => dispatch(addContactSuccess(data) ))\r\n        .catch(error => dispatch(addContactError(error)))\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() => dispatch(deleteContactSuccess(id)))\r\n        .catch(error => dispatch(deleteContactError(error)))\r\n  \r\n};\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    addContact,\r\n    deleteContact,\r\n    fatchContact\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport operations from '..//../redux/operations'\r\n// import shortid from 'shortid';\r\nimport styles from '../ContactForm/contactForm.module.css';\r\n\r\nclass ContactForm extends React.Component {\r\n  state = {\r\n    // id: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleChenge = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value,  });\r\n  };\r\n  //id: shortid.generate()\r\n  handleInputChange = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: '', id: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className={styles.ContactForm} onSubmit={this.handleInputChange}>\r\n          <label>\r\n            Name\r\n            <input\r\n              className={styles.inputForm}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChenge}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              className={styles.inputForm}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChenge}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: data => dispatch(operations.addContact(data))\r\n})\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import {createSelector} from '@reduxjs/toolkit'\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nconst allItems = state => state.contacts.items;\r\n\r\nexport const gatFilteredList = createSelector(\r\n     [allItems, getFilter],\r\n    (items, filter) =>\r\n     { const normalizedFilter = filter.toLowerCase()\r\n\r\n  return items.filter(item =>\r\n      item.name.toLowerCase().includes(normalizedFilter))}\r\n)\r\n\r\n// export const gatFilteredList = state => {\r\n//     const filter = getFilter(state);\r\n//     const items = allItems(state);\r\n    \r\n//     const normalizedFilter = filter.toLowerCase();\r\n\r\n//   return items.filter(item =>\r\n//       item.name.toLowerCase().includes(normalizedFilter))\r\n    \r\n// }","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport operations from '..//../redux/operations';\r\nimport styles from '../ContactList/contactList.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport {gatFilteredList} from '../../redux/selectors'\r\nconst ContactList = ({ contacts, onDeteteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className={styles.contactListItem} key={id}>\r\n        <span>\r\n          {name}:{number}\r\n        </span>\r\n\r\n        <button\r\n          className={styles.deleteButton}\r\n          onClick={() => onDeteteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  })),\r\n  onDeteteContact: PropTypes.func,\r\n};\r\n\r\n// const gatFilteredList = (allItems, filter) => {\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   return allItems.filter(item =>\r\n//       item.name.toLowerCase().includes(normalizedFilter),\r\n//   ); \r\n// }\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: gatFilteredList(state)\r\n\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeteteContact: (id) => dispatch(operations.deleteContact(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from '../Filter/filter.module.css';\r\nimport {chengeFilter} from '..//../redux/actions'\r\nimport PropTypes from 'prop-types';\r\nimport {getFilter} from '../../redux/selectors'\r\n\r\nconst Filter = ({ filter, handleChenge }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.inputFilter}\r\n      type=\"text\"\r\n      // name=\"name\"\r\n      value={filter}\r\n      onChange={handleChenge}\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      required\r\n    />\r\n  </label>\r\n);\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n    handleChenge: PropTypes.func,\r\n};\r\n \r\nconst mapStateToProps = state => ({\r\n  filter: getFilter(state),\r\n\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleChenge: (e) => dispatch(chengeFilter(e.currentTarget.value)),\r\n});\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\nimport operations from '..//..//redux/operations'\r\n\r\nclass Phonebook extends React.Component {\r\n  componentDidMount() {\r\n    this.props.onFatchContact()\r\n  }\r\n  \r\n  render = () => {\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n\r\n        <ContactForm  />\r\n        <h2>Contacts</h2>\r\n\r\n        <Filter />\r\n        \r\n        <ContactList/>\r\n      </div>\r\n  \r\n    )\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  onFatchContact: () => dispatch(operations.fatchContact())\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Phonebook);\r\n\r\n\r\n// class Phonebook extends React.Component {\r\n//   state = {\r\n//     // contacts: [\r\n//       // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//       // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//       // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//       // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n//     // ],\r\n//     // filter: '',\r\n//   };\r\n//   // componentDidUpdate(prevProps, prevState) {\r\n//   //   if (this.state.contacts !== prevState.contacts) {\r\n//   //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n//   //   }\r\n//   // }\r\n\r\n//   // componentDidMount() {\r\n//   //   const contacts = localStorage.getItem('contacts');\r\n    \r\n//   //   if (contacts !== null) {\r\n//   //     const parsedContscts = JSON.parse(contacts);\r\n//   //     this.setState({ contacts: parsedContscts });\r\n//   //   }\r\n//   // }\r\n\r\n//   // addContact = data => {\r\n//   //   const normalizedData = data.name.toLowerCase();\r\n    \r\n//   //   const iterateName = this.state.contacts.find(contact =>\r\n//   //     contact.name.toLowerCase().includes(normalizedData),\r\n//   //   );\r\n//   //   if (iterateName === undefined) {\r\n//   //     this.setState(prevState => ({\r\n//   //       contacts: [data, ...prevState.contacts],\r\n//   //     }));\r\n//   //   } else {\r\n//   //     return alert(`${iterateName.name} is already in contacts`);\r\n//   //   }\r\n//   // };\r\n\r\n\r\n//   // deleteContact = contactId => {\r\n//   //   this.setState(prevState => ({\r\n//   //     contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n//   //   }));\r\n//   // };\r\n//   // chengeFilter = e => {\r\n//   //   this.setState({ filter: e.currentTarget.value });\r\n//   // };\r\n//   render() {\r\n   \r\n//     return (\r\n//       <div>\r\n//         <h1>Phonebook</h1>\r\n\r\n//         <ContactForm  />\r\n//         <h2>Contacts</h2>\r\n\r\n//         <Filter />\r\n        \r\n//         <ContactList/>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }","import React from 'react';\nimport Phonebook from './components/Phonebook/Phonebook';\n\nconst App = () => (\n  <div>\n    <Phonebook />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\n// import './index.css';\nimport App from './App';\n// import Counter from './components/counter/Counter';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n  <App />\n</Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}